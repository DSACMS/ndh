# Generated by Django 5.2.3 on 2025-08-04 17:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode_delivery_code', models.CharField(blank=True, max_length=12, null=True)),
                ('smarty_key', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AddressInternational',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_id', models.IntegerField()),
                ('input_id', models.CharField(blank=True, max_length=36, null=True)),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('geocode', models.CharField(blank=True, max_length=4, null=True)),
                ('local_language', models.CharField(blank=True, max_length=6, null=True)),
                ('freeform', models.CharField(blank=True, max_length=512, null=True)),
                ('address1', models.CharField(blank=True, max_length=64, null=True)),
                ('address2', models.CharField(blank=True, max_length=64, null=True)),
                ('address3', models.CharField(blank=True, max_length=64, null=True)),
                ('address4', models.CharField(blank=True, max_length=64, null=True)),
                ('organization', models.CharField(blank=True, max_length=64, null=True)),
                ('locality', models.CharField(blank=True, max_length=64, null=True)),
                ('administrative_area', models.CharField(blank=True, max_length=32, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=16, null=True)),
                ('administrative_area_iso2', models.CharField(blank=True, max_length=8, null=True)),
                ('sub_administrative_area', models.CharField(blank=True, max_length=64, null=True)),
                ('country_iso_3', models.CharField(blank=True, max_length=3, null=True)),
                ('premise', models.CharField(blank=True, max_length=64, null=True)),
                ('premise_number', models.CharField(blank=True, max_length=64, null=True)),
                ('thoroughfare', models.CharField(blank=True, max_length=64, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('geocode_precision', models.CharField(blank=True, max_length=32, null=True)),
                ('max_geocode_precision', models.CharField(blank=True, max_length=32, null=True)),
                ('address_format', models.CharField(blank=True, max_length=128, null=True)),
                ('verification_status', models.CharField(blank=True, max_length=32, null=True)),
                ('address_precision', models.CharField(blank=True, max_length=32, null=True)),
                ('max_address_precision', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'address_international',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AddressNonstandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_id', models.IntegerField()),
                ('input_id', models.CharField(blank=True, max_length=36, null=True)),
                ('input_index', models.IntegerField(blank=True, null=True)),
                ('candidate_index', models.IntegerField(blank=True, null=True)),
                ('addressee', models.CharField(blank=True, max_length=64, null=True)),
                ('delivery_line_1', models.CharField(blank=True, max_length=64, null=True)),
                ('delivery_line_2', models.CharField(blank=True, max_length=64, null=True)),
                ('last_line', models.CharField(blank=True, max_length=64, null=True)),
                ('address_type', models.CharField(blank=True, max_length=32, null=True)),
                ('address_format', models.CharField(blank=True, max_length=128, null=True)),
                ('raw_address', models.TextField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'address_nonstandard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AddressUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_id', models.IntegerField()),
                ('input_id', models.CharField(blank=True, max_length=36, null=True)),
                ('input_index', models.IntegerField(blank=True, null=True)),
                ('candidate_index', models.IntegerField(blank=True, null=True)),
                ('addressee', models.CharField(blank=True, max_length=64, null=True)),
                ('delivery_line_1', models.CharField(blank=True, max_length=64, null=True)),
                ('delivery_line_2', models.CharField(blank=True, max_length=64, null=True)),
                ('last_line', models.CharField(blank=True, max_length=64, null=True)),
                ('delivery_point_barcode', models.CharField(blank=True, max_length=12, null=True)),
                ('urbanization', models.CharField(blank=True, max_length=64, null=True)),
                ('primary_number', models.CharField(blank=True, max_length=30, null=True)),
                ('street_name', models.CharField(blank=True, max_length=64, null=True)),
                ('street_predirection', models.CharField(blank=True, max_length=16, null=True)),
                ('street_postdirection', models.CharField(blank=True, max_length=16, null=True)),
                ('street_suffix', models.CharField(blank=True, max_length=16, null=True)),
                ('secondary_number', models.CharField(blank=True, max_length=32, null=True)),
                ('secondary_designator', models.CharField(blank=True, max_length=16, null=True)),
                ('extra_secondary_number', models.CharField(blank=True, max_length=32, null=True)),
                ('extra_secondary_designator', models.CharField(blank=True, max_length=16, null=True)),
                ('pmb_designator', models.CharField(blank=True, max_length=16, null=True)),
                ('pmb_number', models.CharField(blank=True, max_length=16, null=True)),
                ('city_name', models.CharField(blank=True, max_length=64, null=True)),
                ('default_city_name', models.CharField(blank=True, max_length=64, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=5, null=True)),
                ('plus4_code', models.CharField(blank=True, max_length=4, null=True)),
                ('delivery_point', models.CharField(blank=True, max_length=2, null=True)),
                ('delivery_point_check_digit', models.CharField(blank=True, max_length=1, null=True)),
                ('record_type', models.CharField(blank=True, max_length=1, null=True)),
                ('zip_type', models.CharField(blank=True, max_length=32, null=True)),
                ('ews_match', models.CharField(blank=True, max_length=5, null=True)),
                ('carrier_route', models.CharField(blank=True, max_length=4, null=True)),
                ('congressional_district', models.CharField(blank=True, max_length=2, null=True)),
                ('building_default_indicator', models.CharField(blank=True, max_length=1, null=True)),
                ('rdi', models.CharField(blank=True, max_length=12, null=True)),
                ('elot_sequence', models.CharField(blank=True, max_length=4, null=True)),
                ('elot_sort', models.CharField(blank=True, max_length=4, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('coordinate_license', models.IntegerField(blank=True, null=True)),
                ('geo_precision', models.CharField(blank=True, max_length=18, null=True)),
                ('time_zone', models.CharField(blank=True, max_length=48, null=True)),
                ('utc_offset', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('dst', models.CharField(blank=True, max_length=5, null=True)),
                ('dpv_match_code', models.CharField(blank=True, max_length=1, null=True)),
                ('dpv_footnotes', models.CharField(blank=True, max_length=32, null=True)),
                ('dpv_cmra', models.CharField(blank=True, max_length=1, null=True)),
                ('dpv_vacant', models.CharField(blank=True, max_length=1, null=True)),
                ('dpv_no_stat', models.CharField(blank=True, max_length=1, null=True)),
                ('active', models.CharField(blank=True, max_length=1, null=True)),
                ('footnotes', models.CharField(blank=True, max_length=24, null=True)),
                ('lacslink_code', models.CharField(blank=True, max_length=2, null=True)),
                ('lacslink_indicator', models.CharField(blank=True, max_length=1, null=True)),
                ('suitelink_match', models.CharField(blank=True, max_length=5, null=True)),
                ('enhanced_match', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'address_us',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClinicalCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(max_length=20)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('source_url', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'clinical_credential',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClinicalSchool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'clinical_school',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FhirAddressUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'fhir_address_use',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FhirNameUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'fhir_name_use',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FhirPhoneSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'fhir_phone_system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FhirPhoneUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'fhir_phone_use',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FipsCounty',
            fields=[
                ('id', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'db_table': 'fips_county',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FipsState',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('abbreviation', models.CharField(max_length=2, unique=True)),
            ],
            options={
                'db_table': 'fips_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('ssn', models.CharField(blank=True, max_length=10, null=True)),
                ('gender_code', models.CharField(blank=True, max_length=1, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'individual',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualToAddress',
            fields=[
                ('pk', models.CompositePrimaryKey('individual_id', 'address_id', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'individual_to_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualToClinicalCredential',
            fields=[
                ('pk', models.CompositePrimaryKey('individual_id', 'clinical_credential_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('receipt_date', models.DateField(blank=True, null=True)),
                ('clinical_school_id', models.IntegerField(blank=True, null=True)),
                ('individual_id', models.UUIDField()),
            ],
            options={
                'db_table': 'individual_to_clinical_credential',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualToEmailAddress',
            fields=[
                ('email_address', models.CharField(max_length=300, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'individual_to_email_address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualToLanguageSpoken',
            fields=[
                ('pk', models.CompositePrimaryKey('individual_id', 'language_spoken_id', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'individual_to_language_spoken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualToName',
            fields=[
                ('pk', models.CompositePrimaryKey('individual_id', 'fhir_name_use_id', 'effective_date', blank=True, editable=False, primary_key=True, serialize=False)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=21, null=True)),
                ('prefix', models.CharField(blank=True, max_length=6, null=True)),
                ('suffix', models.CharField(blank=True, max_length=6, null=True)),
                ('effective_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'individual_to_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualToPhoneNumber',
            fields=[
                ('pk', models.CompositePrimaryKey('individual_id', 'phone_number_id', 'fhir_phone_use_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('extension', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'individual_to_phone_number',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LanguageSpoken',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'language_spoken',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MedicareProviderType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(unique=True)),
            ],
            options={
                'db_table': 'medicare_provider_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Npi',
            fields=[
                ('npi', models.BigIntegerField(primary_key=True, serialize=False)),
                ('entity_type_code', models.SmallIntegerField()),
                ('replacement_npi', models.BigIntegerField(blank=True, null=True)),
                ('enumeration_date', models.DateField()),
                ('last_update_date', models.DateField()),
                ('deactivation_reason_code', models.CharField(blank=True, max_length=3, null=True)),
                ('deactivation_date', models.DateField(blank=True, null=True)),
                ('reactivation_date', models.DateField(blank=True, null=True)),
                ('certification_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'npi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NuccClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nucc_taxonomy_code_id', models.CharField(blank=True, max_length=10, null=True)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'nucc_classification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NuccGrouping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'nucc_grouping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NuccSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nucc_taxonomy_code_id', models.CharField(blank=True, max_length=10, null=True)),
                ('display_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'nucc_specialization',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NuccTaxonomyCode',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('display_name', models.TextField()),
                ('definition', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('certifying_board_name', models.TextField(blank=True, null=True)),
                ('certifying_board_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'nucc_taxonomy_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NuccTaxonomyCodeToMedicareProviderType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicare_provider_type_id', models.IntegerField()),
                ('nucc_taxonomy_code_id', models.IntegerField()),
            ],
            options={
                'db_table': 'nucc_taxonomy_code_to_medicare_provider_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OtherIdentifierType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'other_identifier_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'phone_number',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderToNuccTaxonomyCode',
            fields=[
                ('pk', models.CompositePrimaryKey('individual_id', 'nucc_taxonomy_code_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('is_primary', models.BooleanField()),
            ],
            options={
                'db_table': 'provider_to_nucc_taxonomy_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderToOtherIdentifier',
            fields=[
                ('pk', models.CompositePrimaryKey('individual_id', 'state_id', 'value', 'other_identifier_type_id', 'issuer_name', blank=True, editable=False, primary_key=True, serialize=False)),
                ('value', models.CharField(max_length=21)),
                ('issuer_name', models.CharField(max_length=81)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'provider_to_other_identifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('npi', models.OneToOneField(db_column='npi', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='ndhfhir.npi')),
            ],
            options={
                'db_table': 'provider',
                'managed': False,
            },
        ),
    ]
